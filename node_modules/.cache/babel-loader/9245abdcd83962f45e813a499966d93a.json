{"ast":null,"code":"import { INCREMENT, DECREMENT, SET_DIFF } from '../actions';\nimport { combineReducers } from 'redux';\nconst counterInitialState = {\n  value: 0,\n  diff: 1\n};\n\nconst counter = (state = counterInitialState, action) => {\n  switch (action.type) {\n    case INCREMENT:\n      return Object.assign({}, state, {\n        value: state.value + state.diff\n      });\n\n    case DECREMENT:\n      return Object.assign({}, state, {\n        value: state.value - state.diff\n      });\n\n    case SET_DIFF:\n      return Object.assign({}, state, {\n        diff: action.diff\n      });\n\n    default:\n      return state;\n  }\n};\n\nconst counterApp = combineReducers({\n  counter\n});\nexport default counterApp;","map":{"version":3,"sources":["/Users/Shared/Previously Relocated Items/Security/jyj/react/react-calculator/src/reducers/index.js"],"names":["INCREMENT","DECREMENT","SET_DIFF","combineReducers","counterInitialState","value","diff","counter","state","action","type","Object","assign","counterApp"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,SAApB,EAA+BC,QAA/B,QAA+C,YAA/C;AACA,SAASC,eAAT,QAAgC,OAAhC;AAEA,MAAMC,mBAAmB,GAAG;AACxBC,EAAAA,KAAK,EAAE,CADiB;AAExBC,EAAAA,IAAI,EAAE;AAFkB,CAA5B;;AAKA,MAAMC,OAAO,GAAG,CAACC,KAAK,GAAGJ,mBAAT,EAA8BK,MAA9B,KAAyC;AACrD,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKV,SAAL;AACI,aAAOW,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,KAAlB,EAAyB;AAC5BH,QAAAA,KAAK,EAAEG,KAAK,CAACH,KAAN,GAAcG,KAAK,CAACF;AADC,OAAzB,CAAP;;AAGJ,SAAKL,SAAL;AACI,aAAOU,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,KAAlB,EAAyB;AAC5BH,QAAAA,KAAK,EAAEG,KAAK,CAACH,KAAN,GAAcG,KAAK,CAACF;AADC,OAAzB,CAAP;;AAGJ,SAAKJ,QAAL;AACI,aAAOS,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,KAAlB,EAAyB;AAC5BF,QAAAA,IAAI,EAAEG,MAAM,CAACH;AADe,OAAzB,CAAP;;AAGJ;AACI,aAAOE,KAAP;AAdR;AAgBH,CAjBD;;AAmBA,MAAMK,UAAU,GAAGV,eAAe,CAAC;AAC/BI,EAAAA;AAD+B,CAAD,CAAlC;AAIA,eAAeM,UAAf","sourcesContent":["import { INCREMENT, DECREMENT, SET_DIFF } from '../actions';\nimport { combineReducers } from 'redux';\n\nconst counterInitialState = {\n    value: 0,\n    diff: 1\n};\n\nconst counter = (state = counterInitialState, action) => {\n    switch(action.type) {\n        case INCREMENT:\n            return Object.assign({}, state, {\n                value: state.value + state.diff\n            });\n        case DECREMENT:\n            return Object.assign({}, state, {\n                value: state.value - state.diff\n            });\n        case SET_DIFF:\n            return Object.assign({}, state, {\n                diff: action.diff\n            });\n        default:\n            return state;\n    }\n}\n\nconst counterApp = combineReducers({\n    counter\n});\n\nexport default counterApp;"]},"metadata":{},"sourceType":"module"}