{"ast":null,"code":"var _jsxFileName = \"/Users/Shared/Previously Relocated Items/Security/jyj/react/react-calculator/src/components/Option.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { setDiff } from '../actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Option extends Component {\n  constructor(props) {\n    super(props);\n    this.onChange = this.onChange.bind(this);\n  }\n\n  onChange(event) {\n    this.props.onUpdateDiff(parseInt(event.target.value));\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        value: this.props.diff,\n        onChange: this.onChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nlet mapStateToProps = state => {\n  return {\n    diff: state.counter.diff\n  };\n};\n\nlet mapDispatchToProps = dispatch => {\n  return {\n    onUpdateDiff: value => dispatch(setDiff(value))\n  };\n};\n\nOption = connect(mapStateToProps, mapDispatchToProps)(Option);\nexport default Option;","map":{"version":3,"sources":["/Users/Shared/Previously Relocated Items/Security/jyj/react/react-calculator/src/components/Option.js"],"names":["React","Component","connect","setDiff","Option","constructor","props","onChange","bind","event","onUpdateDiff","parseInt","target","value","render","diff","mapStateToProps","state","counter","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,OAAT,QAAwB,YAAxB;;;AAEA,MAAMC,MAAN,SAAqBH,SAArB,CAA+B;AAC3BI,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AAEA,SAAKC,QAAL,GAAgB,KAAKA,QAAL,CAAcC,IAAd,CAAmB,IAAnB,CAAhB;AACH;;AAEDD,EAAAA,QAAQ,CAACE,KAAD,EAAQ;AACZ,SAAKH,KAAL,CAAWI,YAAX,CAAwBC,QAAQ,CAACF,KAAK,CAACG,MAAN,CAAaC,KAAd,CAAhC;AACH;;AAEDC,EAAAA,MAAM,GAAG;AACL,wBACI;AAAA,6BACI;AAAO,QAAA,KAAK,EAAE,KAAKR,KAAL,CAAWS,IAAzB;AAA+B,QAAA,QAAQ,EAAE,KAAKR;AAA9C;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ;AAKH;;AAjB0B;;AAoB/B,IAAIS,eAAe,GAAIC,KAAD,IAAW;AAC7B,SAAO;AACHF,IAAAA,IAAI,EAAEE,KAAK,CAACC,OAAN,CAAcH;AADjB,GAAP;AAGH,CAJD;;AAMA,IAAII,kBAAkB,GAAIC,QAAD,IAAa;AAClC,SAAO;AACHV,IAAAA,YAAY,EAAGG,KAAD,IAAWO,QAAQ,CAACjB,OAAO,CAACU,KAAD,CAAR;AAD9B,GAAP;AAGH,CAJD;;AAMAT,MAAM,GAAGF,OAAO,CAACc,eAAD,EAAkBG,kBAAlB,CAAP,CAA6Cf,MAA7C,CAAT;AAEA,eAAeA,MAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { setDiff } from '../actions';\n\nclass Option extends Component {\n    constructor(props) {\n        super(props);\n\n        this.onChange = this.onChange.bind(this);\n    }\n\n    onChange(event) {\n        this.props.onUpdateDiff(parseInt(event.target.value));\n    }\n\n    render() {\n        return (\n            <div>\n                <input value={this.props.diff} onChange={this.onChange} />\n            </div>\n        );\n    }\n}\n\nlet mapStateToProps = (state) => {\n    return {\n        diff: state.counter.diff\n    }\n}\n\nlet mapDispatchToProps = (dispatch) =>{\n    return {\n        onUpdateDiff: (value) => dispatch(setDiff(value))\n    };\n}\n\nOption = connect(mapStateToProps, mapDispatchToProps)(Option);\n\nexport default Option;"]},"metadata":{},"sourceType":"module"}